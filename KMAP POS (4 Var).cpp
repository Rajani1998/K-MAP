#include<iostream>
#include<conio.h>
using namespace std;

int main()
{ 
	cout<<"================================="<<endl;
	cout<<" 4-Variable K-Map Simplification "<<endl;
	cout<<"================================="<<endl;
	cout<<"                    ab     "<<endl;
	cout<<"     =================================="<<endl;
	cout<<"     ||      00    01    11    10    ||"<<endl;
	cout<<"     ||     _____ _____ _____ _____  ||"<<endl;
	cout<<"     ||00  | m00 | m04 | m12 | m08 | ||"<<endl;
	cout<<"     ||    |_____|_____|_____|_____| ||"<<endl;
	cout<<"     ||01  | m01 | m05 | m13 | m09 | ||"<<endl;
	cout<<" cd  ||    |_____|_____|_____|_____| ||"<<endl;
	cout<<"     ||11  | m03 | m07 | m15 | m11 | ||"<<endl;
	cout<<"     ||    |_____|_____|_____|_____| ||"<<endl;        
	cout<<"     ||10  | m02 | m06 | m14 | m10 | ||"<<endl;
	cout<<"     ||    |_____|_____|_____|_____| ||"<<endl; 
	cout<<"     =================================="<<endl;    
	cout<<"{For m01 type 1 , For m02 type 2 ,..."<<"\n To terminate enter -1}"<<endl<<"Enter the first MAX term ";
    int m[16] = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
	fflush(stdin);
	int temp;
	cin>>temp;
	while(temp != -1){
		if (temp>=0&&temp<16&&m[temp]==1) m[temp] = 0;
		else if(m[temp]==0)cout<<"Already Set to 0\n";
		else cout<<"Invalid Index\n";
		cout<<"Enter the next MAX term ";
		cin>>temp;
	}
	cout<<"\n                    ab     "<<endl;
	cout<<"     =================================="<<endl;
	cout<<"     ||      00    01    11    10    ||"<<endl;
	cout<<"     ||     _____ _____ _____ _____  ||"<<endl;
	cout<<"     ||00  |  "<<m[1]<<"  |  "<<m[4]<<"  |  "<<m[12]<<"  |  "<<m[8]<<"  | ||"<<endl;
	cout<<"     ||    |_____|_____|_____|_____| ||"<<endl;
	cout<<"     ||01  |  "<<m[1]<<"  |  "<<m[5]<<"  |  "<<m[13]<<"  |  "<<m[9]<<"  | ||"<<endl;
	cout<<" cd  ||    |_____|_____|_____|_____| ||"<<endl;
	cout<<"     ||11  |  "<<m[3]<<"  |  "<<m[7]<<"  |  "<<m[15]<<"  |  "<<m[11]<<"  | ||"<<endl;
	cout<<"     ||    |_____|_____|_____|_____| ||"<<endl;        
	cout<<"     ||10  |  "<<m[2]<<"  |  "<<m[6]<<"  |  "<<m[14]<<"  |  "<<m[10]<<"  | ||"<<endl;
	cout<<"     ||    |_____|_____|_____|_____| ||"<<endl;
	cout<<"     =================================="<<endl;  
   
    bool M2[32]={1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
   
    //grouping of two horizontally
	if((m[0]==0)&&(m[4]==0))
        M2[0]=0;
    if((m[4]==0)&&(m[12]==0))
        M2[1]=0;
    if((m[12]==0)&&(m[8]==0))
        M2[2]=0;
    if((m[1]==0)&&(m[5]==0))
        M2[3]=0;
    if((m[5]==0)&&(m[13]==0))
        M2[4]=0;
    if((m[13]==0)&&(m[9]==0))
        M2[5]=0;
    if((m[3]==0)&&(m[7]==0))
        M2[6]=0;
    if((m[7]==0)&&(m[15]==0))
        M2[7]=0;
    if((m[15]==0)&&(m[11]==0))
        M2[8]=0;
    if((m[2]==0)&&(m[6]==0))
        M2[9]=0;
    if((m[6]==0)&&(m[14]==0))
        M2[10]=0;
    if((m[14]==0)&&(m[10]==0))
        M2[11]=0;
	//grouping of two vertically
    if((m[0]==0)&&(m[1]==0))
        M2[12]=0;
    if((m[4]==0)&&(m[5]==0))
        M2[13]=0;
    if((m[12]==0)&&(m[13]==0))
        M2[14]=0;
    if((m[8]==0)&&(m[9]==0))
        M2[15]=0;
    if((m[1]==0)&&(m[3]==0))
        M2[16]=0;
    if((m[5]==0)&&(m[7]==0))
        M2[17]=0;
    if((m[13]==0)&&(m[15]==0))
        M2[18]=0;
    if((m[9]==0)&&(m[11]==0))
        M2[19]=0;
    if((m[3]==0)&&(m[2]==0))
        M2[20]=0;
    if((m[7]==0)&&(m[6]==0))
        M2[21]=0;
    if((m[15]==0)&&(m[14]==0))
        M2[22]=0;
    if((m[11]==0)&&(m[10]==0))
        M2[23]=0;
    //grouping of two in circular vertical
	if((m[0]==0)&&(m[2]==0))
        M2[24]=0;
    if((m[4]==0)&&(m[6]==0))
        M2[25]=0;
    if((m[12]==0)&&(m[14]==0))
        M2[26]=0;
    if((m[8]==0)&&(m[10]==0))
        M2[27]=0;
    //grouping of two in circular horizontal
	if((m[0]==0)&&(m[8]==0))
        M2[28]=0;
    if((m[1]==0)&&(m[9]==0))
        M2[29]=0;
    if((m[3]==0)&&(m[11]==0))
        M2[30]=0;
    if((m[2]==0)&&(m[10]==0))
        M2[31]=0;        
 
    bool M4[24] = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
    //grouping of four in square
	if((M2[0]==0)&&(M2[3]==0))
        M4[0]=0;
    if((M2[1]==0)&&(M2[4]==0))
        M4[1]=0;    
    if((M2[2]==0)&&(M2[5]==0))
        M4[2]=0;
    if((M2[3]==0)&&(M2[6]==0))
        M4[3]=0;
    if((M2[4]==0)&&(M2[7]==0))
        M4[4]=0;
    if((M2[5]==0)&&(M2[8]==0))
        M4[5]=0;
    if((M2[6]==0)&&(M2[9]==0))
        M4[6]=0;
    if((M2[7]==0)&&(M2[10]==0))
        M4[7]=0;
    if((M2[8]==0)&&(M2[11]==0))
        M4[8]=0;
    //circular square (4 grouping)
	if((M2[0]==0)&&(M2[9]==0))
        M4[9]=0;
    if((M2[1]==0)&&(M2[10]==0))
        M4[10]=0;
    if((M2[2]==0)&&(M2[11]==0))
        M4[11]=0;
    if((M2[12]==0)&&(M2[15]==0))
        M4[12]=0;
    if((M2[16]==0)&&(M2[19]==0))
        M4[13]=0;
    if((M2[20]==0)&&(M2[23]==0))
        M4[14]=0;
    //horizonatl line (4 grouping)
	if((M2[0]==0)&&(M2[2]==0))
        M4[15]=0;
    if((M2[3]==0)&&(M2[5]==0))
        M4[16]=0;
    if((M2[6]==0)&&(M2[8]==0))
        M4[17]=0;
    if((M2[9]==0)&&(M2[11]==0))
        M4[18]=0;
    //vertical line (4 grouping)
	if((M2[12]==0)&&(M2[20]==0))
        M4[19]=0;
    if((M2[13]==0)&&(M2[21]==0))
        M4[20]=0;
    if((M2[14]==0)&&(M2[22]==0))
        M4[21]=0;
    if((M2[15]==0)&&(M2[23]==0))
        M4[22]=0;
    if((M2[24]==0)&&(M2[27]==0))
    	M4[23] = 0; 
	     
    bool M8[8] = {1,1,1,1,1,1,1,1};
    //vertical group(8 group)
    if((M4[19]==0)&&(M4[20]==0))
        M8[0]=0;
    if((M4[20]==0)&&(M4[21]==0))
        M8[1]=0;
    if((M4[21]==0)&&(M4[22]==0))
        M8[2]=0;
    //horizontal group (8 group)
	if((M4[15]==0)&&(M4[16]==0))
        M8[3]=0;
    if((M4[16]==0)&&(M4[17]==0))
        M8[4]=0;
    if((M4[17]==0)&&(M4[18]==0))
        M8[5]=0;
    if((M4[15]==0)&&(M4[18]==0))
        M8[6]=0;
    if((M4[19]==0)&&(M4[22]==0))
        M8[7]=0;
    
	bool M16=1;
    if((M8[0]==0)&&(M8[2]==0))
        M16=0;

    int count=0,flag=0;
	string simp;
    
	if (M16==0)
        {
        cout<<endl<<"_______________________________________________________________________________";
        cout<<endl<<endl<<"The simplified function is = 0"<<endl;   
        cout<<endl<<"_______________________________________________________________________________";
		getch();
        return 0;
        }
 
	for(int i=0;i<16;i++){
		if(m[i]==1){
			flag =1;//Any one is off
			continue;
		}
		count++;
	}
	if(flag == 1 && count ==0){
        cout<<endl<<"_______________________________________________________________________________";
        cout<<endl<<endl<<"The simplified function is = 1"<<endl;   
        cout<<endl<<"_______________________________________________________________________________";
        getch();
        return 0;
	}
	 
    if (M8[0]==0)
        {
            simp = simp + "(a)";
        }   
    if (M8[2]==0)
        {
            simp = simp + "(a\')";
        }
	if (M8[7]==0)
        {
            simp = simp + "(b)";
        }
	if (M8[1]==0)
        {
            simp = simp + "(b\')";
        }
	if (M8[5]==0)
        {
            simp = simp + "(c\')";
        }
	if (M8[3]==0)
        {
            simp = simp + "(c)";
        }
    if (M8[4]==0)
        {
            simp = simp + "(d\')";
        }
        if (M8[6]==0)
        {
            simp = simp + "(d)";
        }
    if (M4[0]==0)
        {
            if((M4[2]==1)&&(M4[6]==1))
                simp = simp + "(a+c)";
        }
    if (M4[1]==0)
        {
            if((M4[7]==1)&&(M4[12]==1))
                simp = simp + "(b\'+c)";
        }
    if (M4[2]==0)
        {
            if((M4[0]==1)&&(M4[8]==1))
                simp = simp + "(a\'+c)";
        }
    if (M4[3]==0)
        {
            if((M4[5]==1)&&(M4[9]==1))          
                simp = simp + "(a+d)";
        }
    if (M4[4]==0)
        {
            if((M4[10]==1)&&(M4[13]==1))
                simp = simp + "(b\'+d\')";
        }
    if (M4[5]==0)
        {
            if((M4[3]==1)&&(M4[11]==1))
                simp = simp + "(a+d\')";
        }
    if (M4[6]==0)
        {
            if((M4[0]==1)&&(M4[8]==1))
                simp = simp + "(a+c\')";
        }
    if (M4[7]==0)
        {
            if((M4[1]==1)&&(M4[14]==1))
                simp = simp + "(b\'+c\')";
        }
    if (M4[8]==0)
        {
            if((M4[2]==1)&&(M4[6]==1))
                simp = simp + "(a\'+c\')" ;
        }
    if (M4[9]==0)
        {
            if((M4[11]==1)&&(M4[3]==1))
                simp = simp + "(a+d)";
        }
    if (M4[10]==0)
        {
            if((M4[4]==1)&&(M4[12]==1))
                simp = simp + "(b\'+d)";
        }
    if (M4[11]==0)
        {
            if((M4[9]==1)&&(M4[5]==1))
                simp = simp + "(a\'+d)";
        }
    if (M4[12]==0)
        {
            if((M4[14]==1)&&(M4[1]==1))
                simp = simp + "(b+c)";
        }
    if (M4[13]==0)
        {
            if((M4[4]==1)&&((M2[12]==1)||(M4[14]==1)))
                simp = simp + "(b+d\')";
        }
    if (M4[14]==0)
        {
            if((M4[12]==1)&&(M4[7]==1))
                simp = simp + "(b+c\')";
        }
    if (M4[15]==0)
        {
            if((M4[18]==1)&&(M4[16]==1))
                simp = simp + "(c+d)";
        }
    if (M4[16]==0)
        {
            if((M4[15]==1)&&(M4[17]==1))
                simp = simp + "(c+d\')";
        }
    if (M4[17]==0)
        {
            if((M4[16]==1)&&(M4[18]==1))
                simp = simp + "(c\'+d\')";
        }
    if (M4[18]==0)
        {
            if((M4[17]==1)&&(M4[15]==1))
                simp = simp + "(c\'+d)";
        }
    if (M4[19]==0)
        {
            if((M4[20]==1)&&(M4[22]==1))
                simp = simp + "(a+b)";
        }
    if (M4[20]==0)
        {
            if((M4[19]==1)&&(M4[21]==1))
                simp = simp + "(a+b\')";
        }
    if (M4[21]==0)
        {
            if((M4[20]==1)&&(M4[22]==1))
                simp = simp + "(a\'+b\')";
        }
    if (M4[22]==0)
        {
            if((M4[19]==1)&&(M4[21]==1))
                simp = simp + "(a\'+b)";
        }
    if (M4[23]==1)
        {
            if((M4[12]==0)&&(M4[7]==0))
                simp = simp + "(b+d)";
        }
        
    if (M2[0]==0)
        {
            if((M2[2]==1)&&(M2[3]==1)&&(M2[9]==1))
                simp = simp + "(a+c+d)";
        }
    if (M2[1]==0)
        {
            if((M2[4]==1)&&(M2[10]==1)&&((M2[0]==1)||(M2[1]==1)))
                simp = simp + "(b\'+c+d)";
        }   
    if (M2[2]==0)
        {
            if((M2[0]==1)&&(M2[5]==1)&&(M2[11]==1))
                simp = simp + "(a\'+c+d)";
        }
    if (M2[3]==0)
        {
            if((M2[0]==1)&&(M2[6]==1)&&(M2[5]==1))
                simp = simp + "(a+c+d\')";
        }
    if (M2[4]==0)
        {
            if((M2[1]==1)&&(M2[7]==1)&&((M2[3]==1)||(M2[5]==1)))
                simp = simp + "(b+c+d\')";
        }
    if (M2[5]==0)
        {
            if((M2[3]==1)&&(M2[2]==1)&&(M2[8]==1))
                simp = simp + "(a\'+c+d\')";
        }
    if (M2[6]==0)
        {
            if((M2[3]==1)&&(M2[8]==1)&&(M2[9]==1))
                simp = simp + "(a+c\'+d\')";
        }
    if (M2[7]==0)
        {
            if((M2[4]==1)&&(M2[10]==1)&&((M2[6]==1)||(M2[8]==1)))
                simp = simp + "(b\'+c\'+d\')";
        }
    if (M2[8]==0)
        {
            if((M2[6]==1)&&(M2[5]==1)&&(M2[11]==1))
                simp = simp + "(a\'+c\'+d\')";
        }
    if (M2[9]==0)
        {
            if((M2[11]==1)&&(M2[6]==1)&&(M2[0]==1))
                simp = simp + "(a+c\'+d)";
        }
    if (M2[10]==0)
        {
            if((M2[7]==1)&&(M2[1]==1)&&((M2[9]==1)||(M2[11]==1)))
                simp = simp + "(b\'+c\'+d)";
        }
    if (M2[11]==0)
        {
            if((M2[9]==1)&&(M2[8]==1)&&(M2[2]==1))
                simp = simp + "(a\'+c\'+d)";
        }
    if (M2[12]==0)
        {
            if((M2[13]==1)&&(M2[15]==1)&&(M2[20]==1))
                simp = simp + "(a+b+c)";
        }
    if (M2[13]==0)
        {
            if((M2[12]==1)&&(M2[14]==1)&&(M2[17]==1))
                simp = simp + "(a+b\'+c)";
        }
    if (M2[14]==0)
        {
            if((M2[13]==1)&&(M2[15]==1)&&(M2[18]==1))
                simp = simp + "(a\'+b\'+c)";
        }
    if (M2[15]==0)
        {
            if((M2[14]==1)&&(M2[12]==1)&&(M2[19]==1))
                simp = simp + "(a\'+b+c)";
        }
    if (M2[16]==0)
        {
            if((M2[17]==1)&&(M2[19]==1)&&((M2[12]==1)||(M2[20]==1)))
                simp = simp + "(a+b+d\')";
        }
    if (M2[17]==0)
        {
            if((M2[16]==1)&&(M2[18]==1)&&((M2[13]==1)||(M2[21]==1)))
                simp = simp + "(a+b\'+d\')";
        }
    if (M2[18]==0)
        {
            if((M2[17]==1)&&(M2[19]==1)&&((M2[14]==1)||(M2[22]==1)))
                simp = simp + "(a\'+b\'+d\')";
        }   
    if (M2[19]==0)
        {
            if((M2[18]==1)&&(M2[16]==1)&&((M2[15]==1)||(M2[23]==1)))
                simp = simp + "(a\'+b+d\')";
        }
    if (M2[20]==0)
        {
            if((M2[21]==1)&&(M2[23]==1)&&(M2[12]==1))
                simp = simp + "(a+b+c\')";
        }
    if (M2[21]==0)
        {
            if((M2[20]==1)&&(M2[22]==1)&&(M2[13]==1))
                simp = simp + "(a+b\'+c\')";
        }
    if (M2[22]==0)
        {
            if((M2[21]==1)&&(M2[23]==1)&&(M2[14]==1))
                simp = simp + "(a\'+b\'+c\')";
        }
    if (M2[23]==0)
        {
            if((M2[22]==1)&&(M2[20]==1)&&(M2[15]==1))
                simp = simp + "(a\'+b+c\')";
        }
    if (M2[24]==0)
        {
            if((M2[25]==1)&&(M2[27]==1)&&(M2[16]==1))
                simp = simp + "(a+b+d)";
        }
    if (M2[25]==0)
        {
            if((M2[24]==1)&&(M2[26]==1)&&(M2[17]==1))
                simp = simp + "(a+b\'+d)";
        }
    if (M2[26]==0)
        {
            if((M2[25]==1)&&(M2[27]==1)&&(M2[18]==1))
                simp = simp + "(a\'+b\'+d)";
        }
    if (M2[27]==0)
        {
            if((M2[26]==1)&&(M2[24]==1)&&(M2[19]==1))
                simp = simp + "(a\'+b+d)";
        }
    if (M2[28]==0)
        {
            if((M2[29]==1)&&(M2[31]==1)&&(M2[1]==1))
                simp = simp + "(b+c+d)";
        }
    if (M2[29]==0)
        {
            if((M2[30]==1)&&(M2[28]==1)&&(M2[4]==1))
                simp = simp + "(b+c+d\')";
        }
    if (M2[30]==0)
        {
            if((M2[29]==1)&&(M2[31]==1)&&(M2[7]==1))
                simp = simp + "(b+c\'+d\')";
        }
    if (M2[31]==0)
        {
            if((M2[30]==1)&&(M2[28]==1)&&(M2[10]==1))
                simp = simp + "(b+c\'+d)";
        }
    if (m[0]==0)
        {
            if((m[1]==1)&&(m[2]==1)&&(m[4]==1)&&(m[8]==1))
                simp = simp + "(a+b+c+d)";
        }
    if (m[1]==0)
        {
            if((m[0]==1)&&(m[3]==1)&&(m[5]==1)&&(m[9]==1))
                simp = simp + "(a+b\'+c+d)";
        }
    if (m[3]==0)
        {
            if((m[1]==1)&&(m[2]==1)&&(m[7]==1)&&(m[11]==1))
                simp = simp + "(a\'+b\'+c+d)";
        }
    if (m[2]==0)
        {
            if((m[3]==1)&&(m[0]==1)&&(m[6]==1)&&(m[10]==1))
                simp = simp + "(a\'+b+c+d)";
        }
    if (m[4]==0)
        {
            if((m[0]==1)&&(m[5]==1)&&(m[6]==1)&&(m[12]==1))
                simp = simp + "(a+b+c+d\')";
        }
    if (m[5]==0)
        {
            if((m[4]==1)&&(m[7]==1)&&(m[1]==1)&&(m[13]==1))
                simp = simp + "(a+b\'+c+d\') ";
        }
    if (m[7]==0)
        {
            if((m[5]==1)&&(m[6]==1)&&(m[3]==1)&&(m[15]==1))
                simp = simp + "(a\'+b\'+c+d\')";
        }
    if (m[6]==0)
        {
            if((m[7]==1)&&(m[4]==1)&&(m[2]==1)&&(m[14]==1))
                simp = simp + "(a\'+b+c+d\')";
        }
    if (m[12]==0)
        {
            if((m[4]==1)&&(m[13]==1)&&(m[14]==1)&&(m[8]==1))
                simp = simp + "(a+b+c\'+d\')";
        }
    if (m[13]==0)
        {
            if((m[12]==1)&&(m[15]==1)&&(m[5]==1)&&(m[9]==1))
                simp = simp + "(a+b\'+c\'+d\')";
        }
    if (m[15]==0)
        {
            if((m[13]==1)&&(m[14]==1)&&(m[7]==1)&&(m[11]==1))
                simp = simp + "(a\'+b\'+c\'+d\')";
        }
    if (m[14]==0)
        {
            if((m[15]==1)&&(m[12]==1)&&(m[6]==1)&&(m[10]==1))
                simp = simp + "(a\'+b+c\'+d\')";
        }
    if (m[8]==0)
        {
            if((m[9]==1)&&(m[10]==1)&&(m[0]==1)&&(m[12]==1))
                simp = simp + "(a+b+c\'+d)";
        }
    if (m[9]==0)
        {
            if((m[8]==1)&&(m[11]==1)&&(m[13]==1)&&(m[1]==1))
                simp = simp + "(a+b\'+c\'+d)";
        }
    if (m[11]==0)
        {
            if((m[9]==1)&&(m[10]==1)&&(m[15]==1)&&(m[3]==1))
                simp = simp + "(a\'+b\'+c\'+d)";
        }
    if (m[10]==0)
        {
            if((m[11]==1)&&(m[8]==1)&&(m[2]==1)&&(m[14]==1))
                simp = simp + "(a\'+b+c\'+d)";
        }
 
    cout<<endl<<"_______________________________________________________________________________";
    cout<<endl<<endl<<" The Simplified function is : "<<simp<<endl;   
    cout<<endl<<"_______________________________________________________________________________";
    getch();
}
